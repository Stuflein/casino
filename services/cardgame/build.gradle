plugins {
    id 'groovy'
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id 'idea'
}


group 'casino'
version '0.1'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {

    implementation project(":api")

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime-osx"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    //security
    implementation("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    implementation 'io.micronaut.security:micronaut-security-jwt'

    implementation "io.micronaut:micronaut-function-client"

    //service discovery
    runtimeOnly "io.micronaut:micronaut-discovery-client"

    //caching
    implementation("io.micronaut.redis:micronaut-redis-lettuce")

    //Call-Tracing--Jaeger
    implementation("io.micronaut:micronaut-tracing")
    runtimeOnly("io.jaegertracing:jaeger-thrift")
    implementation("io.jaegertracing:jaeger-thrift")


    //fasterXml
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.10.3', ext: 'pom'



    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")





    //MongoDB  micronaut
    implementation("io.micronaut.mongodb:micronaut-mongo-reactive")



    //TEST
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"

}

test.classpath += configurations.developmentOnly

mainClassName = "casino.cardgame.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

