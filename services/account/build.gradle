plugins {
//    id 'java'
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id 'groovy'
    id "net.ltgt.apt-eclipse" version "0.21"
    id 'idea'
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

group 'casino'
version '0.1'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation project(":api")

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    //MicrRunt for mac
    implementation "io.micronaut:micronaut-runtime-osx"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    //cache
//    implementation("io.micronaut.cache:micronaut-cache-core")
    // redis
//    implementation("io.micronaut.redis:micronaut-redis-lettuce")

    //fasterXml
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.10.3', ext: 'pom'


    //SECURITY
    implementation 'io.micronaut.security:micronaut-security-oauth2:2.2.0'
    implementation("io.micronaut.security:micronaut-security-annotations")
    // compileOnly("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    implementation "io.micronaut.security:micronaut-security-jwt"


    //pw-coder
    implementation "org.springframework.security:spring-security-crypto:5.4.2"
//    implementation "org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}"TODO: gradle.properties version nicht Ã¼bernommen
    implementation "org.springframework.security:spring-security-core:5.4.1"
    //implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"

    //Call-Tracing--Jaeger
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.jaegertracing:jaeger-thrift")
    runtimeOnly("io.jaegertracing:jaeger-thrift")

    //DB
    implementation("io.micronaut.sql:micronaut-vertx-mysql-client")
//    implementation group: 'io.vertx', name: 'vertx-rx-java', version: '3.9.1'
//    implementation 'io.vertx:vertx-mysql-client:3.9.1'
    implementation('io.micronaut:micronaut-jdbc:2.2.5')
    runtimeOnly 'io.micronaut.sql:micronaut-jdbc-dbcp'
    runtimeOnly 'mysql:mysql-connector-java:8.0.15'
//    implementation "io.vertx:vertx-codegen:3.9.1"
//    implementation 'org.hibernate:hibernate-core:5.4.25.Final'

    //service discovery
    runtimeOnly "io.micronaut:micronaut-discovery-client"

//    MicronautTest SPock
//    implementation 'org.spockframework.spock:spock-core:spock-1.3'
//    implementation 'org.spockframework.spock:spock-spring:spock-1.3'
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
//    testCompile group: 'com.athaydes', name: 'spock-reports', version: '1.2.10'
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"


    //testing Spock

//    implementation( 'org.codehaus.gmavenplus:gmavenplus-plugin:1.11.1')
//    implementation "org.codehaus.groovy:groovy:3.0.6"
//    testImplementation platform("org.spockframework:spock-bom:2.0-M4-groovy-3.0")
//    testImplementation "org.spockframework:spock-core"
//    testRuntimeOnly "net.bytebuddy:byte-buddy:1.10.10" // allows mocking of classes (in addition to interfaces)
//    testRuntimeOnly "org.objenesis:objenesis:3.1"      // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)


    //Micronaut&Spock

//    testImplementation("io.micronaut.groovy:micronaut-runtime-groovy")
//    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
//    testImplementation("io.micronaut:micronaut-inject-groovy")
//    testImplementation("org.spockframework:spock-core") {
//        exclude group: "org.codehaus.groovy", module: "groovy-all"
//    }
//    testImplementation("io.micronaut.test:micronaut-test-spock")
//    testImplementation('micronaut-inject-java') TODO: muss auf testImpl classpath
//    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
//    testAnnotationProcessor "io.micronaut:micronaut-inject-groovy"
//    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
//    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    //testImplementation "org.junit.jupiter:junit-jupiter-api"
//    testImplementation "io.micronaut.test:micronaut-test-junit5"
//    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    //testing jUnit5 & mockito
//    testImplementation(platform('org.junit:junit-bom:5.7.0'))
//    testImplementation("org.junit.jupiter:junit-jupiter-api:latest.release")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:latest.release")
//    testImplementation'org.mockito:mockito-core:3.6.28'
//    testImplementation("io.cucumber:cucumber-java:latest.release")
//    testImplementation("io.cucumber:cucumber-junit-platform-engine:latest.release")
//    testImplementation("io.cucumber:cucumber-picocontainer:latest.release")


}

test.classpath += configurations.developmentOnly

mainClassName = "casino.account.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
//    task('functionalTest', type: Test) {
//        systemProperty 'com.athaydes.spockframework.report.outputDir', 'build/reports/spock'
//    }
}


//tasks {
//    test {
//        systemProperties(System.getProperties() as Map<String, Object>)
//        systemProperty("cucumber.execution.parallel.enabled", System.getProperty("test.parallel"))
//        systemProperty("cucumber.filter.tags", "not @ignore")
//        useJUnitPlatform {
//            excludeTags("disabled")
//        }
//    }
//}
shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.compilerArgs.add('-Xlint:unchecked')
}



