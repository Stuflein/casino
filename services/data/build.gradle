plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id 'groovy'
    id 'idea'
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id "application"
}

group 'casino'
version '0.1'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation project(":api")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    //MicrRunt for mac
    implementation "io.micronaut:micronaut-runtime-osx"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    //SECURITY
    implementation 'io.micronaut.security:micronaut-security-oauth2:2.2.0'
    implementation("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    implementation "io.micronaut.security:micronaut-security-jwt"

    //Micronaut data
    runtimeOnly("org.postgresql:postgresql")
    implementation( 'org.postgresql:postgresql:42.2.18')
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-vertx-pg-client")
    annotationProcessor("io.micronaut.data:micronaut-data-processor:2.2.4")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation 'io.micronaut.data:micronaut-data-model:2.2.4'
    //flyway
    implementation("io.micronaut.flyway:micronaut-flyway")

    //service discovery
    runtimeOnly "io.micronaut:micronaut-discovery-client"

    //    MicronautTest SPock
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"

}

test.classpath += configurations.developmentOnly

mainClassName = "casino.data.Application"

test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.compilerArgs.add('-Xlint:unchecked')
}